// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rating.proto

package rating

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ReviewInfo struct {
	ReviewId             int32    `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewInfo) Reset()         { *m = ReviewInfo{} }
func (m *ReviewInfo) String() string { return proto.CompactTextString(m) }
func (*ReviewInfo) ProtoMessage()    {}
func (*ReviewInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_rating_3b2407fe241f3a6c, []int{0}
}
func (m *ReviewInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewInfo.Unmarshal(m, b)
}
func (m *ReviewInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewInfo.Marshal(b, m, deterministic)
}
func (dst *ReviewInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewInfo.Merge(dst, src)
}
func (m *ReviewInfo) XXX_Size() int {
	return xxx_messageInfo_ReviewInfo.Size(m)
}
func (m *ReviewInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewInfo proto.InternalMessageInfo

func (m *ReviewInfo) GetReviewId() int32 {
	if m != nil {
		return m.ReviewId
	}
	return 0
}

type Rate struct {
	ReviewId             int32    `protobuf:"varint,1,opt,name=review_id,json=reviewId,proto3" json:"review_id,omitempty"`
	Maximum              int32    `protobuf:"varint,2,opt,name=maximum,proto3" json:"maximum,omitempty"`
	Current              int32    `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rate) Reset()         { *m = Rate{} }
func (m *Rate) String() string { return proto.CompactTextString(m) }
func (*Rate) ProtoMessage()    {}
func (*Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_rating_3b2407fe241f3a6c, []int{1}
}
func (m *Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rate.Unmarshal(m, b)
}
func (m *Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rate.Marshal(b, m, deterministic)
}
func (dst *Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rate.Merge(dst, src)
}
func (m *Rate) XXX_Size() int {
	return xxx_messageInfo_Rate.Size(m)
}
func (m *Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_Rate proto.InternalMessageInfo

func (m *Rate) GetReviewId() int32 {
	if m != nil {
		return m.ReviewId
	}
	return 0
}

func (m *Rate) GetMaximum() int32 {
	if m != nil {
		return m.Maximum
	}
	return 0
}

func (m *Rate) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

func init() {
	proto.RegisterType((*ReviewInfo)(nil), "rating.ReviewInfo")
	proto.RegisterType((*Rate)(nil), "rating.Rate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RatingClient is the client API for Rating service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RatingClient interface {
	// request an advertisement info
	GetRate(ctx context.Context, in *ReviewInfo, opts ...grpc.CallOption) (*Rate, error)
}

type ratingClient struct {
	cc *grpc.ClientConn
}

func NewRatingClient(cc *grpc.ClientConn) RatingClient {
	return &ratingClient{cc}
}

func (c *ratingClient) GetRate(ctx context.Context, in *ReviewInfo, opts ...grpc.CallOption) (*Rate, error) {
	out := new(Rate)
	err := c.cc.Invoke(ctx, "/rating.Rating/GetRate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RatingServer is the server API for Rating service.
type RatingServer interface {
	// request an advertisement info
	GetRate(context.Context, *ReviewInfo) (*Rate, error)
}

func RegisterRatingServer(s *grpc.Server, srv RatingServer) {
	s.RegisterService(&_Rating_serviceDesc, srv)
}

func _Rating_GetRate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RatingServer).GetRate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rating.Rating/GetRate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RatingServer).GetRate(ctx, req.(*ReviewInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rating_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rating.Rating",
	HandlerType: (*RatingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRate",
			Handler:    _Rating_GetRate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rating.proto",
}

func init() { proto.RegisterFile("rating.proto", fileDescriptor_rating_3b2407fe241f3a6c) }

var fileDescriptor_rating_3b2407fe241f3a6c = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0x2c, 0xc9,
	0xcc, 0x4b, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0x34, 0xb9, 0xb8,
	0x82, 0x52, 0xcb, 0x32, 0x53, 0xcb, 0x3d, 0xf3, 0xd2, 0xf2, 0x85, 0xa4, 0xb9, 0x38, 0x8b, 0xc0,
	0xbc, 0xf8, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x0e, 0x88, 0x80, 0x67, 0x8a,
	0x52, 0x38, 0x17, 0x4b, 0x50, 0x62, 0x49, 0x2a, 0x5e, 0x45, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0x89,
	0x15, 0x99, 0xb9, 0xa5, 0xb9, 0x12, 0x4c, 0x60, 0x29, 0x18, 0x17, 0x24, 0x93, 0x5c, 0x5a, 0x54,
	0x94, 0x9a, 0x57, 0x22, 0xc1, 0x0c, 0x91, 0x81, 0x72, 0x8d, 0xcc, 0xb9, 0xd8, 0x82, 0xc0, 0xae,
	0x11, 0xd2, 0xe5, 0x62, 0x77, 0x4f, 0x2d, 0x01, 0xdb, 0x22, 0xa4, 0x07, 0x75, 0x2f, 0xc2, 0x79,
	0x52, 0x3c, 0x70, 0xb1, 0xc4, 0x92, 0x54, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x5f, 0x8c, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xf4, 0x9a, 0x24, 0xb5, 0xdb, 0x00, 0x00, 0x00,
}
